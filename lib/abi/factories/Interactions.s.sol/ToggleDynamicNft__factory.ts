/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from 'ethers'
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers'
import type { NonPayableOverrides } from '../../common'
import type {
  ToggleDynamicNft,
  ToggleDynamicNftInterface,
} from '../../Interactions.s.sol/ToggleDynamicNft'

const _abi = [
  {
    type: 'function',
    name: 'IS_SCRIPT',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'TOKEN_ID_TO_TOGGLE',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'run',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'toggleNft',
    inputs: [
      {
        name: 'dynamicNftAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
] as const

const _bytecode =
  '0x6080604052600c805462ff00ff19166201000117905534801561002157600080fd5b50610328806100316000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632c07e19114610051578063c040622614610066578063e9c971ff1461006e578063f8ccbf4714610089575b600080fd5b61006461005f3660046102b1565b6100ac565b005b6100646101f5565b610076600081565b6040519081526020015b60405180910390f35b600c5461009c9062010000900460ff1681565b6040519015158152602001610080565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316637fb5297f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561010a57600080fd5b505af115801561011e573d6000803e3d6000fd5b505060405163e8a58f0360e01b8152600060048201526001600160a01b038416925063e8a58f039150602401600060405180830381600087803b15801561016457600080fd5b505af1158015610178573d6000803e3d6000fd5b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101da57600080fd5b505af11580156101ee573d6000803e3d6000fd5b5050505050565b6040805163e374cdf160e01b81526004810191909152600a604482015269111e5b985b5a58d3999d60b21b606482015246602482015260009073__$afaf3cb9b6fed785cfa99ccefb3a7db4f8$__9063e374cdf190608401602060405180830381865af415801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e91906102d5565b9050610299816100ac565b50565b6001600160a01b038116811461029957600080fd5b6000602082840312156102c357600080fd5b81356102ce8161029c565b9392505050565b6000602082840312156102e757600080fd5b81516102ce8161029c56fea2646970667358221220d9979a22d39ac7b2a7a5db0002a7edfc919fe6e879a905ea562a9ad19f1bc1c564736f6c63430008140033'

type ToggleDynamicNftConstructorParams =
  | [linkLibraryAddresses: ToggleDynamicNftLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ToggleDynamicNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  )
}

export class ToggleDynamicNft__factory extends ContractFactory {
  constructor(...args: ToggleDynamicNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      const [linkLibraryAddresses, signer] = args
      super(
        _abi,
        ToggleDynamicNft__factory.linkBytecode(linkLibraryAddresses),
        signer
      )
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ToggleDynamicNftLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$afaf3cb9b6fed785cfa99ccefb3a7db4f8\\$__', 'g'),
      linkLibraryAddresses['lib/foundry-devops/src/DevOpsTools.sol:DevOpsTools']
        .replace(/^0x/, '')
        .toLowerCase()
    )

    return linkedBytecode
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {})
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ToggleDynamicNft & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): ToggleDynamicNft__factory {
    return super.connect(runner) as ToggleDynamicNft__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ToggleDynamicNftInterface {
    return new Interface(_abi) as ToggleDynamicNftInterface
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ToggleDynamicNft {
    return new Contract(address, _abi, runner) as unknown as ToggleDynamicNft
  }
}

export interface ToggleDynamicNftLibraryAddresses {
  ['lib/foundry-devops/src/DevOpsTools.sol:DevOpsTools']: string
}
